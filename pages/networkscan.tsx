import Head from "next/head";
import Image from "next/image";
import {
  NavBar,
  NavLogo,
  NavItem,
  NavDropDown,
  NavDropDownItem,
  NavDropDownDivider,
  NavSearch,
} from "../components/Navbar";
import { Button } from "../components/Button";
import { List, ListItem } from "../components/List";

// import NavDropDownItem from '../components/NavBar/NavDropDownItem'
// import Alert from '../components/Alert'
import { useState } from "react";
// import styles from '../styles/Home.module.css'

const range = (start: number, stop: number): number[] =>
  [...Array(stop).keys()].slice(start);

interface somePage {
  port: number;
  page: any;
}

export default function NetworkScan(): any {
  const [getTarget, setTarget] = useState("");
  const [getPages, setPages] = useState<any[]>([]);

  const getPagePromise = async (
    theTarget: string,
    pageindex: number = 1
  ): Promise<any> => {
    return await fetch(`http://${theTarget}:${pageindex}`, {
      mode: "no-cors",
      headers: {
        "Access-Control-Allow-Origin": "*",
      },
    })
      .then(async (response) => await response.text())
      .then((mypage) => {
        const pdata: somePage = { port: pageindex, page: mypage };
        console.log(pageindex);
        return pdata;
      })
      .catch((e) => console.log(e));
  };

  const GETSOME = async (): Promise<void> => {
    // const myprofile = await fetch(`${getTarget}`).then(
    //   async (response) => await response.json()
    // );
    // const iters = await Math.ceil(myprofile.public_repos / 100);
    // const startport = document.querySelector("#a")?.value;
    // const endport = document.querySelector("#b")?.value;
    const promiselist = range(78, 82).map(
      async (pageindex) => await getPagePromise(getTarget, pageindex)
    );
    const nestedOutput = await Promise.all(promiselist);
    setPages(
      nestedOutput
        .flat()
        .filter((pdata) => pdata !== undefined)
        .map((pdata) => pdata.port)
    );
  };
  const onchangetxt = (event: any): void => {
    setTarget((old) => event.target.value);
  };

  return (
    <>
      <NavBar
        logo={
          <NavLogo
            src="https://dev.w3.org/SVG/tools/svgweb/samples/svg-files/atom.svg"
            label="HI"
          />
        }
      >
        <NavItem label="BootStrapPlayground" link="/playground" />
        <NavItem label="NetworkScanner" link="/networkscan" />
        <NavDropDown label="DropDown" link="#">
          <NavDropDownItem href={""} label={"Stuff"} />
          <NavDropDownDivider />
          <NavDropDownItem href={""} label={"More Stuff"} />
          <NavDropDownItem href={""} label={"Too Much Stuff"} />
        </NavDropDown>
        <NavSearch />
      </NavBar>

      <div className="container">
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className="main">
          <div className="container">
            <div className="row">
              <div className="col">
                <input
                  type="text"
                  className="form-control"
                  onChange={onchangetxt}
                ></input>
                <input type="text" className="form-control" id="a"></input>
                <input type="text" className="form-control" id="b"></input>
              </div>
              <div className="col">
                <button className="border border-primary" onClick={GETSOME}>
                  GET ALL REPOS and GHPAGES
                </button>
              </div>
              <Button
                onClick={(x: any) => console.log(getPages)}
                label="Log to Console"
              />
            </div>
            <div className="row">
              <List>
                {getPages.map((page) => (
                  <ListItem key={page} label={page} />
                ))}
              </List>
              <div>
                Stuff with pages list
                {getPages}
              </div>
            </div>
          </div>
        </main>

        <footer className="footer">
          <a
            href="https://userjy.github.io"
            target="_blank"
            rel="noopener noreferrer"
          >
            Powered by{"Something"}
            <span className="logo">
              <Image
                src="/vercel.svg"
                alt="Vercel Logo"
                width={72}
                height={16}
              />
            </span>
          </a>
        </footer>
      </div>
    </>
  );
}
